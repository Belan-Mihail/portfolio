{"ast":null,"code":"import{useMutation,useQuery,useQueryClient}from'@tanstack/react-query';import apiClient from'../apiClient';export const useGetCommentsQuery=slug=>useQuery({queryKey:['comments'],queryFn:async()=>(await apiClient.get(\"api/projects/\".concat(slug,\"/comment\"))).data});export const useCreateCommentMutation=slug=>{const queryClient=useQueryClient();return useMutation({mutationFn:async _ref=>{let{content}=_ref;return(await apiClient.post(\"api/projects/\".concat(slug,\"/comment\"),{content})).data;},onSuccess:()=>{queryClient.invalidateQueries({queryKey:['comments']});}});};export const useUpdateCommentMutation=(slug,commentId)=>{const queryClient=useQueryClient();return useMutation({mutationFn:async _ref2=>{let{content}=_ref2;return(await apiClient.put(\"api/projects/\".concat(slug,\"/comment/\").concat(commentId),{content})).data;},onSuccess:()=>{queryClient.invalidateQueries({queryKey:['comments']});}});};export const useDeleteCommentMutation=(slug,commentId)=>{const queryClient=useQueryClient();return useMutation({mutationFn:async()=>await apiClient.delete(\"api/projects/\".concat(slug,\"/comment/\").concat(commentId)),onSuccess:()=>{queryClient.invalidateQueries({queryKey:['comments']});}});};","map":{"version":3,"names":["useMutation","useQuery","useQueryClient","apiClient","useGetCommentsQuery","slug","queryKey","queryFn","get","concat","data","useCreateCommentMutation","queryClient","mutationFn","_ref","content","post","onSuccess","invalidateQueries","useUpdateCommentMutation","commentId","_ref2","put","useDeleteCommentMutation","delete"],"sources":["C:/Users/bilan/Desktop/vs code/react/my-own/my-portfolio/my-porfolio/src/hooks/commentHook.ts"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'\r\nimport apiClient from '../apiClient'\r\nimport { Comment } from '../types/CommentType'\r\n\r\n\r\nexport const useGetCommentsQuery = (slug:string) =>\r\n  useQuery({\r\n    queryKey: ['comments'],\r\n    queryFn: async () => (await apiClient.get<Comment[]>(`api/projects/${slug}/comment`)).data,\r\n  })\r\n\r\n  export const useCreateCommentMutation = (slug: string) => {\r\n    const queryClient = useQueryClient()\r\n    return useMutation({\r\n      mutationFn: async ({\r\n        content,\r\n      }: {\r\n        content: string\r\n      }) =>\r\n        (\r\n          await apiClient.post<Comment>(`api/projects/${slug}/comment`, {\r\n            content,\r\n          })\r\n        ).data,\r\n       onSuccess: () => {\r\n        queryClient.invalidateQueries({queryKey: ['comments']})\r\n       }\r\n    })\r\n  }\r\n    export const useUpdateCommentMutation = (slug: string, commentId: string) => {\r\n      const queryClient = useQueryClient()\r\n      return useMutation({\r\n        mutationFn: async ({\r\n          content,\r\n        }: {\r\n          content: string\r\n        }) =>\r\n          (\r\n            await apiClient.put<Comment>(`api/projects/${slug}/comment/${commentId}`, {\r\n              content,\r\n            })\r\n          ).data,\r\n          onSuccess: () => {\r\n            queryClient.invalidateQueries({queryKey: ['comments']})\r\n           }\r\n      })}\r\n  \r\n    export const useDeleteCommentMutation = (slug: string, commentId: string) => {\r\n      const queryClient = useQueryClient()\r\n      return useMutation({\r\n        mutationFn: async () =>\r\n          (\r\n            await apiClient.delete<Comment>(`api/projects/${slug}/comment/${commentId}`)\r\n          ),\r\n          onSuccess: () => {\r\n            queryClient.invalidateQueries({queryKey: ['comments']})\r\n           }\r\n      })}"],"mappings":"AAAA,OAASA,WAAW,CAAEC,QAAQ,CAAEC,cAAc,KAAQ,uBAAuB,CAC7E,MAAO,CAAAC,SAAS,KAAM,cAAc,CAIpC,MAAO,MAAM,CAAAC,mBAAmB,CAAIC,IAAW,EAC7CJ,QAAQ,CAAC,CACPK,QAAQ,CAAE,CAAC,UAAU,CAAC,CACtBC,OAAO,CAAE,KAAAA,CAAA,GAAY,CAAC,KAAM,CAAAJ,SAAS,CAACK,GAAG,iBAAAC,MAAA,CAA4BJ,IAAI,YAAU,CAAC,EAAEK,IACxF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,wBAAwB,CAAIN,IAAY,EAAK,CACxD,KAAM,CAAAO,WAAW,CAAGV,cAAc,CAAC,CAAC,CACpC,MAAO,CAAAF,WAAW,CAAC,CACjBa,UAAU,CAAE,MAAAC,IAAA,MAAO,CACjBC,OAGF,CAAC,CAAAD,IAAA,OACC,CACE,KAAM,CAAAX,SAAS,CAACa,IAAI,iBAAAP,MAAA,CAA0BJ,IAAI,aAAY,CAC5DU,OACF,CAAC,CAAC,EACFL,IAAI,GACPO,SAAS,CAAEA,CAAA,GAAM,CAChBL,WAAW,CAACM,iBAAiB,CAAC,CAACZ,QAAQ,CAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CACxD,CACH,CAAC,CAAC,CACJ,CAAC,CACC,MAAO,MAAM,CAAAa,wBAAwB,CAAGA,CAACd,IAAY,CAAEe,SAAiB,GAAK,CAC3E,KAAM,CAAAR,WAAW,CAAGV,cAAc,CAAC,CAAC,CACpC,MAAO,CAAAF,WAAW,CAAC,CACjBa,UAAU,CAAE,MAAAQ,KAAA,MAAO,CACjBN,OAGF,CAAC,CAAAM,KAAA,OACC,CACE,KAAM,CAAAlB,SAAS,CAACmB,GAAG,iBAAAb,MAAA,CAA0BJ,IAAI,cAAAI,MAAA,CAAYW,SAAS,EAAI,CACxEL,OACF,CAAC,CAAC,EACFL,IAAI,GACNO,SAAS,CAAEA,CAAA,GAAM,CACfL,WAAW,CAACM,iBAAiB,CAAC,CAACZ,QAAQ,CAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CACxD,CACL,CAAC,CAAC,EAAC,CAEL,MAAO,MAAM,CAAAiB,wBAAwB,CAAGA,CAAClB,IAAY,CAAEe,SAAiB,GAAK,CAC3E,KAAM,CAAAR,WAAW,CAAGV,cAAc,CAAC,CAAC,CACpC,MAAO,CAAAF,WAAW,CAAC,CACjBa,UAAU,CAAE,KAAAA,CAAA,GAER,KAAM,CAAAV,SAAS,CAACqB,MAAM,iBAAAf,MAAA,CAA0BJ,IAAI,cAAAI,MAAA,CAAYW,SAAS,CAAE,CAC5E,CACDH,SAAS,CAAEA,CAAA,GAAM,CACfL,WAAW,CAACM,iBAAiB,CAAC,CAACZ,QAAQ,CAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CACxD,CACL,CAAC,CAAC,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}