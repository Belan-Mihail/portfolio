{"ast":null,"code":"import{useMutation}from'@tanstack/react-query';import apiClient from'../apiClient';// we use useMutation for post and put request\nexport const useSigninMutation=()=>useMutation({// async funtion that accept email and password\nmutationFn:async _ref=>{let{email,password}=_ref;return(await apiClient.post(\"api/users/signin\",{email,password})).data;}});export const useSignupMutation=()=>useMutation({mutationFn:async _ref2=>{let{name,email,password}=_ref2;return(await apiClient.post(\"api/users/signup\",{name,email,password})).data;}});","map":{"version":3,"names":["useMutation","apiClient","useSigninMutation","mutationFn","_ref","email","password","post","data","useSignupMutation","_ref2","name"],"sources":["C:/Users/bilan/Desktop/vs code/react/my-own/my-portfolio/my-porfolio/src/hooks/userHooks.ts"],"sourcesContent":["import { useMutation } from '@tanstack/react-query'\r\nimport apiClient from '../apiClient'\r\nimport { UserInfo } from '../types/UserInfo'\r\n\r\n// we use useMutation for post and put request\r\nexport const useSigninMutation = () =>\r\n  useMutation({\r\n    // async funtion that accept email and password\r\n    mutationFn: async ({\r\n      email,\r\n      password,\r\n    }: {\r\n        // type of email and password\r\n      email: string\r\n      password: string\r\n    }) =>\r\n      (\r\n        await apiClient.post<UserInfo>(`api/users/signin`, {\r\n          email,\r\n          password,\r\n        })\r\n      ).data,\r\n  })\r\n\r\n  export const useSignupMutation = () =>\r\n    useMutation({\r\n      mutationFn: async ({\r\n        name,\r\n        email,\r\n        password,\r\n      }: {\r\n        name: string\r\n        email: string\r\n        password: string\r\n      }) =>\r\n        (\r\n          await apiClient.post<UserInfo>(`api/users/signup`, {\r\n            name,\r\n            email,\r\n            password,\r\n          })\r\n        ).data,\r\n    })"],"mappings":"AAAA,OAASA,WAAW,KAAQ,uBAAuB,CACnD,MAAO,CAAAC,SAAS,KAAM,cAAc,CAGpC;AACA,MAAO,MAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAC/BF,WAAW,CAAC,CACV;AACAG,UAAU,CAAE,MAAAC,IAAA,MAAO,CACjBC,KAAK,CACLC,QAKF,CAAC,CAAAF,IAAA,OACC,CACE,KAAM,CAAAH,SAAS,CAACM,IAAI,oBAA+B,CACjDF,KAAK,CACLC,QACF,CAAC,CAAC,EACFE,IAAI,EACV,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAC/BT,WAAW,CAAC,CACVG,UAAU,CAAE,MAAAO,KAAA,MAAO,CACjBC,IAAI,CACJN,KAAK,CACLC,QAKF,CAAC,CAAAI,KAAA,OACC,CACE,KAAM,CAAAT,SAAS,CAACM,IAAI,oBAA+B,CACjDI,IAAI,CACJN,KAAK,CACLC,QACF,CAAC,CAAC,EACFE,IAAI,EACV,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}