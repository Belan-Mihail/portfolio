{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilan\\\\Desktop\\\\vs code\\\\react\\\\my-own\\\\my-portfolio\\\\my-porfolio\\\\src\\\\Store.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorMode = ['dark', 'ligt', 'green', 'yellow', 'red'];\nfunction random() {\n  let random = Math.floor(Math.random() * colorMode.length);\n  return random;\n}\nfunction randomInteger(min, max) {\n  let number = Math.floor(Math.random() * (max - min + 1)) + min;\n  console.log(number);\n  return number;\n}\nconst initialState = {\n  mode: localStorage.getItem(\"mode\") ? localStorage.getItem(\"mode\") : colorMode[random()]\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SWITCH_MODE':\n      // prev state check. if prev.state === dark => light another (prev state was ligth) => dark\n      return {\n        mode: colorMode[random]\n      };\n    default:\n      return state;\n  }\n}\nconst defaultDispatch = () => initialState;\nconst Store = /*#__PURE__*/React.createContext({\n  state: initialState,\n  dispatch: defaultDispatch\n});\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction StoreProvider(props) {\n  _s();\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = StoreProvider;\nexport { Store, StoreProvider };\nvar _c;\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","colorMode","random","Math","floor","length","randomInteger","min","max","number","console","log","initialState","mode","localStorage","getItem","reducer","state","action","type","defaultDispatch","Store","createContext","dispatch","StoreProvider","props","_s","useReducer","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bilan/Desktop/vs code/react/my-own/my-portfolio/my-porfolio/src/Store.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst colorMode = ['dark', 'ligt', 'green', 'yellow', 'red']\r\nfunction random () { \r\n    let random = Math.floor(Math.random() * colorMode.length)\r\n    return random \r\n}\r\n\r\nfunction randomInteger(min: number, max: number) {\r\n    let number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    console.log(number)\r\n    return number\r\n  }\r\n\r\ntype AppState = {\r\n  mode: string;\r\n};\r\n\r\nconst initialState: AppState = {\r\n  mode: localStorage.getItem(\"mode\")\r\n    ? localStorage.getItem(\"mode\")!\r\n    : colorMode[random()],\r\n};\r\n\r\ntype Action = { type: 'SWITCH_MODE'}\r\n\r\nfunction reducer(state: AppState, action: Action):AppState {\r\n    switch(action.type) {\r\n        case 'SWITCH_MODE':\r\n            // prev state check. if prev.state === dark => light another (prev state was ligth) => dark\r\n            return {mode: colorMode[random]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst defaultDispatch: React.Dispatch<Action> = () => initialState\r\n\r\nconst Store = React.createContext({\r\n    state: initialState,\r\n    dispatch: defaultDispatch\r\n})\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction StoreProvider(props: React.PropsWithChildren<{}>) {\r\n    const [state, dispatch] = React.useReducer<React.Reducer<AppState, Action>>(reducer, initialState)\r\n    return <Store.Provider value={{ state, dispatch }} {...props} />\r\n}\r\n\r\nexport { Store, StoreProvider }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC;AAC5D,SAASC,MAAMA,CAAA,EAAI;EACf,IAAIA,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAGD,SAAS,CAACI,MAAM,CAAC;EACzD,OAAOH,MAAM;AACjB;AAEA,SAASI,aAAaA,CAACC,GAAW,EAAEC,GAAW,EAAE;EAC7C,IAAIC,MAAM,GAAGN,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,IAAIM,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EAC9DG,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOA,MAAM;AACf;AAMF,MAAMG,YAAsB,GAAG;EAC7BC,IAAI,EAAEC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAC9BD,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAC5Bd,SAAS,CAACC,MAAM,CAAC,CAAC;AACxB,CAAC;AAID,SAASc,OAAOA,CAACC,KAAe,EAAEC,MAAc,EAAW;EACvD,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,aAAa;MACd;MACA,OAAO;QAACN,IAAI,EAAEZ,SAAS,CAACC,MAAM;MAAC,CAAC;IACpC;MACI,OAAOe,KAAK;EACpB;AACJ;AAEA,MAAMG,eAAuC,GAAGA,CAAA,KAAMR,YAAY;AAElE,MAAMS,KAAK,gBAAGvB,KAAK,CAACwB,aAAa,CAAC;EAC9BL,KAAK,EAAEL,YAAY;EACnBW,QAAQ,EAAEH;AACd,CAAC,CAAC;;AAEF;AACA,SAASI,aAAaA,CAACC,KAAkC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACT,KAAK,EAAEM,QAAQ,CAAC,GAAGzB,KAAK,CAAC6B,UAAU,CAAkCX,OAAO,EAAEJ,YAAY,CAAC;EAClG,oBAAOZ,OAAA,CAACqB,KAAK,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAEM;IAAS,CAAE;IAAA,GAAKE;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AACpE;AAACP,EAAA,CAHQF,aAAa;AAAAU,EAAA,GAAbV,aAAa;AAKtB,SAASH,KAAK,EAAEG,aAAa;AAAE,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}