{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport apiClient from '../apiClient';\nexport const useGetProjectsQuery = () => sett;\nuseQuery({\n  queryKey: ['projects'],\n  queryFn: async () => (await apiClient.get(`api/projects`)).data\n});\nexport const useGetProjectDetailsBySlugQuery = slug => {\n  _s();\n  return useQuery({\n    queryKey: ['projects', slug],\n    queryFn: async () => (await apiClient.get(`api/projects/${slug}`)).data\n  });\n};\n_s(useGetProjectDetailsBySlugQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","apiClient","useGetProjectsQuery","sett","queryKey","queryFn","get","data","useGetProjectDetailsBySlugQuery","slug","_s"],"sources":["C:/Users/bilan/Desktop/vs code/react/my-own/my-portfolio/my-porfolio/src/hooks/projectHook.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query'\r\nimport apiClient from '../apiClient'\r\nimport PortfolioDataType from '../types/PortfolioDataType'\r\n\r\n\r\nexport const useGetProjectsQuery = () =>\r\n  sett\r\n  useQuery({\r\n    queryKey: ['projects'],\r\n    queryFn: async () => (\r\n      \r\n      await apiClient.get<PortfolioDataType[]>(`api/projects`)).data,\r\n  })\r\n\r\n  export const useGetProjectDetailsBySlugQuery = (slug: string) =>\r\n    useQuery({\r\n      queryKey: ['projects', slug],\r\n      queryFn: async () =>\r\n        (await apiClient.get<PortfolioDataType>(`api/projects/${slug}`)).data,\r\n    })"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,SAAS,MAAM,cAAc;AAIpC,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KACjCC,IAAI;AACJH,QAAQ,CAAC;EACPI,QAAQ,EAAE,CAAC,UAAU,CAAC;EACtBC,OAAO,EAAE,MAAAA,CAAA,KAAY,CAEnB,MAAMJ,SAAS,CAACK,GAAG,CAAuB,cAAa,CAAC,EAAEC;AAC9D,CAAC,CAAC;AAEF,OAAO,MAAMC,+BAA+B,GAAIC,IAAY;EAAAC,EAAA;EAAA,OAC1DV,QAAQ,CAAC;IACPI,QAAQ,EAAE,CAAC,UAAU,EAAEK,IAAI,CAAC;IAC5BJ,OAAO,EAAE,MAAAA,CAAA,KACP,CAAC,MAAMJ,SAAS,CAACK,GAAG,CAAqB,gBAAeG,IAAK,EAAC,CAAC,EAAEF;EACrE,CAAC,CAAC;AAAA;AAAAG,EAAA,CALSF,+BAA+B;EAAA,QAC1CR,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}