{"ast":null,"code":"// import React from 'react'\n\n// const colorMode = ['dark', 'ligth', 'green', 'yellow', 'red']\n// function random () { \n//     let random = Math.floor(Math.random() * colorMode.length)\n//     return random \n// }\n\n// type AppState = {\n//   mode: string;\n// };\n\n// const initialState: AppState = {\n//   mode: localStorage.getItem(\"mode\")\n//     ? localStorage.getItem(\"mode\")!\n//     : colorMode[random()],\n// };\n\n// type Action = { type: 'SWITCH_MODE'}\n\n// function reducer(state: AppState, action: Action):AppState {\n//     switch(action.type) {\n//         case 'SWITCH_MODE':\n//             return {mode: colorMode[random()]}\n//         default:\n//             return state\n//     }\n// }\n\n// const defaultDispatch: React.Dispatch<Action> = () => initialState\n\n// const Store = React.createContext({\n//     state: initialState,\n//     dispatch: defaultDispatch\n// })\n\n// eslint-disable-next-line @typescript-eslint/ban-types\n// function StoreProvider(props: React.PropsWithChildren<{}>) {\n//     const [state, dispatch] = React.useReducer<React.Reducer<AppState, Action>>(reducer, initialState)\n//     return <Store.Provider value={{ state, dispatch }} {...props} />\n// }\n\n// export { Store, StoreProvider }","map":{"version":3,"names":[],"sources":["C:/Users/bilan/Desktop/vs code/react/my-own/my-portfolio/my-porfolio/src/Store.tsx"],"sourcesContent":["// import React from 'react'\r\n\r\n// const colorMode = ['dark', 'ligth', 'green', 'yellow', 'red']\r\n// function random () { \r\n//     let random = Math.floor(Math.random() * colorMode.length)\r\n//     return random \r\n// }\r\n\r\n// type AppState = {\r\n//   mode: string;\r\n// };\r\n\r\n// const initialState: AppState = {\r\n//   mode: localStorage.getItem(\"mode\")\r\n//     ? localStorage.getItem(\"mode\")!\r\n//     : colorMode[random()],\r\n// };\r\n\r\n// type Action = { type: 'SWITCH_MODE'}\r\n\r\n// function reducer(state: AppState, action: Action):AppState {\r\n//     switch(action.type) {\r\n//         case 'SWITCH_MODE':\r\n//             return {mode: colorMode[random()]}\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n// const defaultDispatch: React.Dispatch<Action> = () => initialState\r\n\r\n// const Store = React.createContext({\r\n//     state: initialState,\r\n//     dispatch: defaultDispatch\r\n// })\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\n// function StoreProvider(props: React.PropsWithChildren<{}>) {\r\n//     const [state, dispatch] = React.useReducer<React.Reducer<AppState, Action>>(reducer, initialState)\r\n//     return <Store.Provider value={{ state, dispatch }} {...props} />\r\n// }\r\n\r\n// export { Store, StoreProvider }"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}